// Generated by dia2code
#ifndef RENDER__STATELAYER__H
#define RENDER__STATELAYER__H

#include <vector>
#include <memory>

namespace state {
  class Etat;
  class IObserver;
};
namespace render {
  class TileSet;
  class Surface;
}

#include "state/IObserver.h"
#include "state/Etat.h"
#include "TileSet.h"
#include "Surface.h"

namespace render {

  /// class StateLayer - 
  class StateLayer : public state::IObserver {
    // Associations
    // Attributes
  private:
    state::Etat& etatLayer;
  protected:
    std::vector<std::unique_ptr<TileSet>> tilesets;
    std::vector<std::unique_ptr<Surface>> surfaces;
    // Operations
  public:
    StateLayer (state::Etat& etat);
    std::vector<std::unique_ptr<TileSet>>& getTilesets ();
    std::vector<std::unique_ptr<Surface>>& getSurfaces ();
    void initSurfaces ();
    void stateChanged (const state::StateEvent& e, state::Etat& etat);
    // Setters and Getters
  };

};

#endif
