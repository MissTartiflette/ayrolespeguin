// Generated by dia2code
#ifndef CLIENT__CLIENT__H
#define CLIENT__CLIENT__H

#include <mutex>
#include <SFML/Graphics.hpp>

namespace engine {
  class Moteur;
};
namespace ai {
  class IA;
};
namespace sf {
  class RenderWindow;
};
namespace engine {
  class Observer;
};
namespace render {
  class StateLayer;
}

#include "engine/Moteur.h"
#include "engine/Observer.h"
#include "render/StateLayer.h"
#include "ai/IA.h"

namespace client {

  /// class Client - 
  class Client : public engine::Observer {
    // Associations
    // Attributes
  private:
    engine::Moteur moteur;
    ai::IA* armeeBleue;
    ai::IA* armeeRouge;
    mutable std::mutex draw_mutex;
    bool demarrage;
    sf::RenderWindow& window;
    // Operations
  public:
    Client (sf::RenderWindow& window);
    void engineUpdated ();
    void engineUpdating ();
    void run ();
    // Setters and Getters
  };

};

#endif
